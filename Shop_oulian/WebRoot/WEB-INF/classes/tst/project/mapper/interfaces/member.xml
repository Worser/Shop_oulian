<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tst.project.dao.interfaces.MemberDao">
	<select id="getAllMerchantsStatistics" parameterType="Map" resultType="Map">
		
		select sum(a.profit_money)/#{all_sales} as profit_money,a.merchants_id,b.company_name,b.company_remark

		from tst_profit_member as a
		inner join tst_member as b 
		on a.merchants_id=b.merchants_id
		where a.profit_type='total'
		
		group by a.merchants_id
		
		order by profit_money desc
		
		limit 0,10
	
	</select>
	
	<select id="getAllMerchantsSales" parameterType="memberBean" resultType="float">
		select sum(profit_money) from tst_profit_member	
		where profit_type='total'
	</select>

	<select id="getAllMemberCount" parameterType="memberBean" resultType="int">
		select count(*) from tst_member
		
		where is_delete='0'
	</select>
	<select id="getMemberLevelStatistics" parameterType="Map" resultType="Map">
		select 
		sum(case when member_level = '1' then 1 else 0 end)as level1_count,
		sum(case when member_level = '1' then 1 else 0 end)/#{all_count} as level1_percent,
		
		sum(case when member_level = '2' then 1 else 0 end)as level2_count,
		sum(case when member_level = '2' then 1 else 0 end)/#{all_count} as level2_percent,
		
		sum(case when member_level = '3' then 1 else 0 end)as level3_count,
		sum(case when member_level = '3' then 1 else 0 end)/#{all_count} as level3_percent,
		
		sum(case when member_level = '4' then 1 else 0 end)as level4_count,
		sum(case when member_level = '4' then 1 else 0 end)/#{all_count} as level4_percent,
		
		sum(case when member_level = '5' then 1 else 0 end)as level5_count,
		sum(case when member_level = '5' then 1 else 0 end)/#{all_count} as level5_percent
		
		from tst_member
		where is_delete='0'
		order by member_level desc
	</select>

	<select id="getMemberSalesGoods" parameterType="memberProfitBean" resultType="goodsBean">
	
	select SUM(b.profit_money) profit_money,

(case when c.goods_name is null then "其他" else c.goods_name end) brand_name,
		d.collection_id,(case when d.collection_id is null then "0" else "1" end)
		as is_collection,a.goods_name,a.merchants_id,h.goods_img,a.goods_id

from tst_goods as a
		left join tst_profit_goods as b 
		on a.goods_id = b.goods_id

		inner join tst_goods as h
		on a.goods_name=h.goods_name and h.merchants_id='1' and h.goods_type='2' and h.is_delete='0'
		
		left join tst_goods as c 
		on h.parent_id=c.goods_id and c.goods_state='1' and c.is_delete='0'


		left join tst_collection as d
		on a.goods_id=d.relation_id and d.collection_type='goods_supply'
		and d.is_delete='0' and d.member_id=#{member_id}
		where a.merchants_id=#{merchants_id} and a.goods_state='1' and a.is_delete='0'
		group by a.goods_id
		order by profit_money desc
		limit 0,5
				
		
	</select>


	<select id="getMemberLevelDetail" parameterType="memberLevelBean" resultType="memberLevelBean">
		select * from tst_member_level
		where level_id=#{level_id}
	</select>
	<select id="getMemberProfitCurMonth" parameterType="memberProfitBean" resultType="memberProfitBean">
		select * from tst_profit_member
		where member_id=#{member_id} and merchants_id=#{merchants_id} 
		and profit_time=#{profit_time} and profit_type=#{profit_type}
		and is_delete='0'
	</select>
	
	<update id="updateMemberProfit" parameterType="memberProfitBean">
		update tst_profit_member
		set profit_money=profit_money+#{profit_money}
		,profit_count=profit_count+1
		where member_profit_id=#{member_profit_id}
	</update>
	
	<insert id="insertMemberProfit" parameterType="memberProfitBean">
		insert into tst_profit_member
		(member_id,order_id,profit_time,create_time,profit_money,merchants_id,profit_type,profit_count)
		values
		(#{member_id},#{order_id},#{profit_time},now(),#{profit_money},#{merchants_id},#{profit_type},'1')
	</insert>
	
	<select id="getMemberBalanceRecord" parameterType="billBean" resultType="billBean">
		select order_actual_price as bill_price,
		"order_pay" as bill_type,create_time as bill_time
		,"余额订单支付" as bill_remark from tst_order
		where pay_way='balance' and member_id=#{member_id}
		and FIND_IN_SET(order_state,'wait_send,wait_receive,wait_assessment,end')
		union
		select order_actual_price as bill_price,
		"balance_recharge" as bill_type,create_time as bill_time
		,"余额充值" as bill_remark from tst_order
		where order_source_way='recharge' and member_id=#{member_id}
		and FIND_IN_SET(order_state,'wait_send,wait_receive,wait_assessment,end')
		union
		select cash_price as bill_price,
		"balance_apply" as bill_type,create_time as bill_time
		,"余额提现" as bill_remark from tst_cash_apply
		where merchants_id=#{member_id} and apply_state='end' 
	</select>

	<select id="getMemberTrustRecord" parameterType="billBean" resultType="billBean">
		select order_actual_price as bill_price,
		"order_trust_pay" as bill_type,create_time as bill_time
		,"信用额度订单支付" as bill_remark from tst_order
		where pay_way='trust' and member_id=#{member_id}
		and FIND_IN_SET(order_state,'wait_send,wait_receive,wait_assessment,end')
	</select>
	
	<update id="updateMemberBalancePassword" parameterType="memberBean">
		update tst_member
		set balance_password=#{balance_password}
		where member_id=#{member_id} and member_account=#{member_account}
	</update>
	
	<update id="updateMemberTrustPassword" parameterType="memberBean">
		update tst_member
		set trust_password=#{trust_password}
		where member_id=#{member_id} and member_account=#{member_account}
	</update>
	
	<update id="updateMemberAttach" parameterType="memberBean">
		update tst_member
		set fill_invitation_code=#{fill_invitation_code}
		where member_id = #{member_id}
	</update>

	<insert id="insertMemberIntegral" parameterType="integralBean">
		insert into tst_member_integral
		(member_id,integral_value,integral_type,create_time,relation_id)
		values
		(#{member_id},#{integral_value},#{integral_type},now(),#{relation_id})
	</insert>

	<select id="getMemberIntegral" parameterType="integralBean" resultType="integralBean">
		select a.*,b.order_no from tst_member_integral as a
		inner join tst_order as b on a.relation_id=b.order_id
		where a.is_delete='0' and a.member_id=#{member_id}
		order by create_time desc
	</select>

	<select id="getApplyCashs" parameterType="cashApplyBean" resultType="cashApplyBean">
		select * from tst_cash_apply
		where merchants_id=#{merchants_id}
	</select>
	
	<select id="getLastApplyCash" parameterType="cashApplyBean" resultType="cashApplyBean">
		select * from tst_cash_apply
		where merchants_id=#{merchants_id}
		order by create_time desc limit 0,1
	</select>
	
	<insert id="applyCash" parameterType="cashApplyBean">
		insert into tst_cash_apply
		(merchants_id,cash_time,cash_price,brank_name,brank_code,brank_open_name,brank_open_usr
		,brank_open_mobile,apply_state,create_time,cash_type)
		values
		(#{merchants_id},#{cash_time},#{cash_price},#{brank_name},#{brank_code},#{brank_open_name},#{brank_open_usr}
		,#{brank_open_mobile},'wait_review',now(),#{cash_type})
	</insert>
	
	<select id="getOrderPorfit" parameterType="orderProfitBean" resultType="orderProfitBean">
		select a.*,b.nick_name as user_name,b.head_path as user_img from tst_order_distribution as a
		inner join tst_member as b on a.user_id=b.member_id

		where a.member_id=#{member_id} and a.distribution_relation = #{distribution_relation} 
		and a.distribution_state=#{distribution_state}
	</select>

	<update id="memberBindMobile" parameterType="memberBean">
		update tst_member
		set member_role=member_role
		<if test=' member_account != null and member_account != "" '>
			,member_account=#{member_account}
		</if>
		<if test=' password != null and password != "" '>
			,password=#{password}
		</if>
		where member_id=#{member_id}
	</update>

	<update id="memberBindMobileZSSG" parameterType="memberBean">
		update ecs_users
		set wx_pub_openid=#{wx_pub_openid},nick_name=#{nick_name},
		head_path=#{head_path},create_time=now(),member_token=uuid(),
		invitation_code=uuid(),fill_invitation_code=#{fill_invitation_code},
		create_time=now(),country='1',province=#{province},city=#{city},district=#{district}
		where mobile_phone=#{member_account}
	</update>
	
	
	<update id="memberForgetPassword" parameterType="memberBean" >
		update tst_member
		set password=#{password}
		where member_account=#{member_account}
	</update>
	
	<select id="getMemberByInvitation_code" parameterType="memberBean" resultType="memberBean">
		select * from tst_member
		where invitation_code=#{invitation_code}
	</select>
	
	<select id="getMemberByInvitation_codeZSSG" parameterType="memberBean" resultType="memberBean">
		select * from ecs_users
		where invitation_code=#{invitation_code} and FROM_UNIXTIME(indate,'%Y-%m-%d %h:%i:%s')>now()
	</select>
	
	<update id="updateMemberBusiness" parameterType="memberBean" >
		update tst_member
		set business_id=#{business_id},merchants_account_id=#{merchants_account_id}
		where member_id=#{member_id}
	</update>
	
	<select id="verificationToken" parameterType="memberBean" resultType="memberBean">
		select * from tst_member
		where member_id=#{member_id} and member_token=#{member_token}
		and is_delete='0'
	</select>
	
	<select id="verificationTokenZSSG" parameterType="memberBean" resultType="memberBean">
		select * from ecs_users 
		where user_id=#{member_id} and member_token=#{member_token}
		and is_delete='0'
	</select>
	
	<select id="getMemberByMobile" parameterType="memberBean" resultType="memberBean">
		select * from tst_member
		where member_account=#{member_account}
		and is_delete='0'
	</select>
	<select id="getMemberByMobileZSSG" parameterType="memberBean" resultType="memberBean">
		select * from ecs_users
		where mobile_phone=#{member_account}
		and is_delete='0'
	</select>
	
	
	<select id="getMemberByID" parameterType="memberBean" resultType="memberBean">	
		select 
		(select count(*) from tst_order where merchants_id=a.merchants_id 
and FIND_IN_SET(order_state,'wait_send,wait_receive,wait_assessment,end')) merchants_order_count,
(select count(*) from tst_order where 
 FIND_IN_SET(order_state,'wait_send,wait_receive,wait_assessment,end')) all_order_count,
		a.*,b.nick_name as recommend_name,b.member_account as recommend_phone,b.member_id as recommend_id from tst_member as a 
		left join tst_member as b on a.fill_invitation_code=b.invitation_code and b.is_delete='0' 
		where a.member_id=#{member_id} and a.is_delete='0'
		<if test="is_certification_vip!=null and is_certification_vip!=''">
		   and a.is_certification_vip=#{is_certification_vip}
		</if>

	</select>
	
	<select id="getMemberByIDZSSG" parameterType="memberBean" resultType="memberBean">
		select * from ecs_users
		where user_id=#{member_id}
		and is_delete='0'
	</select>
	<select id="getMemberByOpenidZSSG" parameterType="memberBean" resultType="memberBean">
		select * from ecs_users
		where wx_pub_openid=#{wx_pub_openid}
		and is_delete='0'
	</select>
	
	<insert id="memberRegister" parameterType="memberBean" keyProperty="member_id" useGeneratedKeys="true">
		insert into tst_member
		 (member_account,password,invitation_code
		,fill_invitation_code,hx_account,hx_pass,hx_nick_name,create_time,qrcode_img,
		sex,real_name,nick_name,age,phone,card_id,is_vip,merchants_account_id,merchants_id,is_certification_vip
			<if test=' member_role != null and member_role != "" '>
				,member_role
			</if>
			<if test=' member_code != null and member_code != "" '>
				,member_code
			</if>
			<if test=' stored_code != null and stored_code != "" '>
				,stored_code
			</if>
		) 
		values 
		(#{member_account},#{password},#{invitation_code}
		,#{fill_invitation_code},#{hx_account},#{hx_pass},#{hx_nick_name},now(),#{qrcode_img},
		#{sex},#{real_name},#{nick_name},#{age},#{phone},#{card_id},#{is_vip},#{merchants_account_id},#{merchants_id},#{is_certification_vip}
			<if test=' member_role != null and member_role != "" '>
				,#{member_role}
			</if>
			<if test=' member_code != null and member_code != "" '>
				,#{member_code}
			</if>
			<if test=' stored_code != null and stored_code != "" '>
				,#{stored_code}
			</if>
		)
	</insert>
	
	<update id="updateMemberToken" parameterType="memberBean">
		update tst_member set member_token=#{member_token}
		where member_account=#{member_account}
	</update>
	
	<select id="memberLogin" parameterType="memberBean" resultType="memberBean">
		select * from tst_member where
		member_account=#{member_account} and password=#{password} and is_delete='0'
	</select>
	
	<select id="wxPubMemberLoginZSSG" parameterType="memberBean" resultType="memberBean">
		select * from ecs_users
		where wx_pub_openid=#{wx_pub_openid} and is_delete='0'
	</select>
	
	<select id="wxPubMemberLogin" parameterType="memberBean" resultType="memberBean">
		select a.*,b.nick_name as recommend_name,b.member_account as recommend_phone,b.member_id as recommend_id from tst_member as a 
		left join tst_member as b on a.fill_invitation_code=b.invitation_code and b.is_delete='0' 
		where a.wx_pub_openid=#{wx_pub_openid} and a.is_delete='0'
	</select>
	
	<insert id="wxPubMemberRegister" parameterType="memberBean">
		insert into tst_member
		(wx_pub_openid,member_token,nick_name,head_path,
		invitation_code,fill_invitation_code,create_time,qrcode_img)
		values
		(#{wx_pub_openid},#{member_token},#{nick_name},#{head_path},
		#{invitation_code},#{fill_invitation_code},now(),#{qrcode_img})
	</insert>
	<update id="wxPubMemberUpdate" parameterType="memberBean">
		update tst_member
		set member_token=uuid(),nick_name=#{nick_name},head_path=#{head_path}
		where wx_pub_openid=#{wx_pub_openid} and is_delete='0'
	</update>
	<insert id="wxPubMemberRegisterZSSG" parameterType="memberBean">
		insert into ecs_users
		(wx_pub_openid,member_token,nick_name,user_name,head_path,headimg,
		invitation_code,fill_invitation_code,create_time,mobile_phone,password
		,country,province,city,district)
		values
		(#{wx_pub_openid},#{member_token},#{nick_name},#{user_name},#{head_path},#{headimg},
		uuid(),#{fill_invitation_code},now(),#{member_account},#{password}
		,'1',#{province},#{city},#{district})
	</insert>
	
	<update id="updateMemberDetailVip" parameterType="memberBean">
		update tst_member set member_account=member_account,
		is_vip='1'
		
		<if test=' is_certification_vip != null and is_certification_vip != "" '>
			,is_certification_vip=#{is_certification_vip}
		</if>
		
		
		<if test=' card_id != null and card_id != "" '>
			,card_id=#{card_id}
		</if>
		
		<if test=' member_code != null and member_code != "" '>
			,member_code=#{member_code}
		</if>
		
		<if test=' stored_code != null and stored_code != "" '>
			,stored_code=#{stored_code}
		</if>
		
		<if test=' month_time != null and month_time != "" '>
			,month_time=#{month_time}
		</if>
		
		<if test=' month_integral != null and month_integral != "" and month_integral!="0" and month_integral!=0 '>
			,month_integral=#{month_integral}
		</if>
			
		<if test=' vip_start_time != null and vip_start_time != "" '>
			,vip_start_time=#{vip_start_time}
		</if>
		
		<if test=' vip_end_time != null and vip_end_time != "" '>
			,vip_end_time=#{vip_end_time}
		</if>
		
		<if test=' cviptime != null and cviptime != "" and cviptime != "0" '>
			,cviptime=#{cviptime}
		</if>
		
		<if test=' indate != null and indate != "" and indate != "0" '>
			,indate=#{indate}
		</if>
			
		<if test='phone!=null and phone!="" '>
			,phone=#{phone}
		</if>
		<if test='nick_name!=null and nick_name!="" '>
			,nick_name=#{nick_name}
		</if>
		<if test='real_name !=null and real_name !="" '>
			,real_name=#{real_name}
		</if>
		<if test='age!=null and age!="" '>
			,age=#{age}
		</if>
		<if test='sex!=null and sex!="" '>
			,sex=#{sex}
		</if>
		<if test='head_path!=null and head_path!="" '>
			,head_path=#{head_path}
		</if>	
		<if test='is_remind_group != null and is_remind_group != "" '>
			,is_remind_group=#{is_remind_group}
		</if>	
		<if test='is_remind_pre != null and is_remind_pre != "" '>
			,is_remind_pre=#{is_remind_pre}
		</if>	
		<if test='integral != null and integral != "" and integral != "0" and integral != 0 '>
			,integral=#{integral}
		</if>
		<if test='balance != null and balance != "" '>
			,balance=#{balance}
		</if>
		where member_id=#{member_id}
	</update>
	
	<update id="updateMemberDetail" parameterType="memberBean">
		update tst_member set member_account=member_account
		<if test=' refresh_time != null and refresh_time != "" '>
			,refresh_time=#{refresh_time}
		</if>
		<if test=' refresh_count != null and refresh_count != "" '>
			,refresh_count=#{refresh_count}
		</if>
		
		
		<if test=' is_down_goods != null and is_down_goods != "" '>
			,is_down_goods=#{is_down_goods}
		</if>
		<if test=' invise_no != null and invise_no != "" '>
			,invise_no=#{invise_no}
		</if>
		<if test=' register_assress != null and register_assress != "" '>
			,register_assress=#{register_assress}
		</if>
		<if test=' register_phone != null and register_phone != "" '>
			,register_phone=#{register_phone}
		</if>
		<if test=' bank_name != null and bank_name != "" '>
			,bank_name=#{bank_name}
		</if>
		<if test=' bank_no != null and bank_no != "" '>
			,bank_no=#{bank_no}
		</if>
		<if test=' invise_address != null and invise_address != "" '>
			,invise_address=#{invise_address}
		</if>
		
		
		
		<if test=' is_certification_vip != null and is_certification_vip != "" '>
			,is_certification_vip=#{is_certification_vip}
		</if>
		<if test=' card_id != null and card_id != "" '>
			,card_id=#{card_id}
		</if>
		<if test=' month_time != null and month_time != "" '>
			,month_time=#{month_time}
		</if>
		
		<if test=' month_integral != null and month_integral != "" '>
			,month_integral=#{month_integral}
		</if>
			
		<if test=' vip_start_time != null and vip_start_time != "" '>
			,vip_start_time=#{vip_start_time}
		</if>
		
		<if test=' vip_end_time != null and vip_end_time != "" '>
			,vip_end_time=#{vip_end_time}
		</if>
		
		<if test=' cviptime != null and cviptime != "" and cviptime != "0" '>
			,cviptime=#{cviptime}
		</if>
		
		<if test=' indate != null and indate != "" and indate != "0" '>
			,indate=#{indate}
		</if>
		
		<if test='phone!=null and phone!="" '>
			,phone=#{phone}
		</if>
		<if test='nick_name!=null and nick_name!="" '>
			,nick_name=#{nick_name}
		</if>
		<if test='age!=null and age!="" '>
			,age=#{age}
		</if>
		<if test='sex!=null and sex!="" '>
			,sex=#{sex}
		</if>
		<if test='head_path!=null and head_path!="" '>
			,head_path=#{head_path}
		</if>	
		<if test='is_remind_group != null and is_remind_group != "" '>
			,is_remind_group=#{is_remind_group}
		</if>	
		<if test='is_remind_pre != null and is_remind_pre != "" '>
			,is_remind_pre=#{is_remind_pre}
		</if>	
		<if test='integral != null and integral != "" '>
			,integral=#{integral}
		</if>
		<if test='balance != null and balance != "" '>
			,balance=#{balance}
		</if>
		<if test=' trust_balance != null and trust_balance != "" '>
			,trust_balance=#{trust_balance}
		</if>
		<if test="merchants_id!=null and merchants_id!=''">
		    ,merchants_id=#{merchants_id}
		</if>
		
		<if test="company_name != null  and company_name !='' ">
		    ,company_name=#{company_name}
		</if>
		<if test="company_remark != null  and company_remark !='' ">
		    ,company_remark=#{company_remark}
		</if>
		<if test="legal_person_name != null  and legal_person_name !='' ">
		    ,legal_person_name=#{legal_person_name}
		</if>
		<if test="enterprise_remark != null  and enterprise_remark !='' ">
		    ,enterprise_remark=#{enterprise_remark}
		</if>
		<if test="fixed_telephone != null  and fixed_telephone !='' ">
		    ,fixed_telephone=#{fixed_telephone}
		</if>
		<if test="bank_account != null  and bank_account !='' ">
		    ,bank_account=#{bank_account}
		</if>
		<if test="email_account != null  and email_account !='' ">
		    ,email_account=#{email_account}
		</if>
		where member_id=#{member_id}
	</update>
	
	<update id="updateMemberDetailZSSG" parameterType="memberBean">
			update ecs_users set user_name=user_name
			
			<if test=' is_vip="1" '>
				,is_vip=#{is_vip}
			</if>
			
			<if test=' user_rank="11" '>
				,user_rank=#{user_rank}
			</if>
			
			<if test=' cviptime != null and cviptime != "" and cviptime != "0" '>
				,cviptime=#{cviptime}
			</if>
			
			<if test=' indate != null and indate != "" and indate != "0" '>
				,indate=#{indate}
			</if>
	
			<if test='user_money != null and user_money != "" '>
				,user_money=#{user_money}
			</if>
		where user_id=#{member_id}
	</update>
	
	<!-- 根据商户id查询用户 -->
	<select id="getMemberByMerchants" parameterType="memberBean" resultType="memberBean">
	    select * from tst_member where merchants_id=#{merchants_id} and is_delete='0' and is_freeze='0'
	</select>
	
	
	<!-- 推荐会员 -->
	<select id="getMemberRecommend" parameterType="memberBean" resultType="memberBean">
	    select * from tst_member where is_delete='0' and is_freeze='0'
	     and company_remark is not null 
	    order by member_level desc,create_time desc limit 0,20
	</select>
	
	<!-- 查询供应商列表 -->
	<select id="getMemberList" parameterType="memberBean" resultType="memberBean">
	     select * from tst_member
	     where
	     <if test="is_certification_vip!=null and is_certification_vip!=''">
	          is_certification_vip=#{is_certification_vip} and
	     </if>
	     is_delete='0' and is_freeze='0'
	     order by create_time desc
	</select>
	
	<!-- 获得该品牌授权的供应商 -->
	<select id="getBrandAuthorizationMember" parameterType="memberBean" resultType="memberBean">
	   select * from tst_member where is_delete='0' and is_freeze='0'
			and FIND_IN_SET(member_id,(
			select GROUP_CONCAT(DISTINCT member_id) from tst_member_img 
	   where img_remark=#{brand_name}
	   and is_delete='0' 
	   and img_type='related_authorization'))

	</select>
	
	<!-- 获得该品牌没有授权的供应商 -->
	<select id="getBrandNotAuthorizationMember" parameterType="memberBean" resultType="memberBean">
	    select * from tst_member where is_delete='0'
			and is_freeze='0'
			and FIND_IN_SET(merchants_id,(
			select GROUP_CONCAT(DISTINCT(merchants_id)) from tst_goods 
			where is_delete='0'
			and goods_type='2'
			and goods_state='1'
			and merchants_id!='1'
			and FIND_IN_SET(goods_name,(
			select GROUP_CONCAT(goods_name) from 
						tst_goods 
						where merchants_id='1'
			      and goods_type='2'
			      and goods_state='1' 
						and is_delete='0' 
						and goods_parent_uuid like CONCAT('%',#{goods_uuid},'%')
			))))
			and not FIND_IN_SET(member_id,(
			select GROUP_CONCAT(DISTINCT member_id) from tst_member_img 
				   where img_remark=#{brand_name}
				   and is_delete='0' 
				   and img_type='related_authorization'
			))
	</select>
	
	<!-- 查询该品牌下所有供应商（只有供应了该品牌的才能查到） -->
	<select id="getBrandAllMember" parameterType="memberBean" resultType="memberBean">
	    select * from tst_member where is_delete='0'
			and is_freeze='0'
			and FIND_IN_SET(merchants_id,(
			select GROUP_CONCAT(DISTINCT(merchants_id)) from tst_goods 
			where is_delete='0'
			and goods_type='2'
			and goods_state='1'
			and merchants_id!='1'
			and FIND_IN_SET(goods_name,(
			select GROUP_CONCAT(goods_name) from 
						tst_goods 
						where merchants_id='1'
			      and goods_type='2'
			      and goods_state='1' 
						and is_delete='0' 
						and goods_parent_uuid like CONCAT('%',#{goods_uuid},'%')
			))))
	</select>
	
	<!-- 设置客服QQ -->
	<insert id="addCustomerServiceQQ" parameterType="customerServiceBean">
	   insert into tst_customer_service(member_id,service_qq,is_delete,create_time)
	   values(#{member_id},#{service_qq},#{is_delete},NOW())
	</insert>
	
	<!-- 查询供应商所设置客服QQ -->
	<select id="getMemberCustomerServiceQQ" parameterType="customerServiceBean" resultType="customerServiceBean">
	   select * from tst_customer_service where member_id=#{member_id} and is_delete='0'
	</select>
	
	<!-- 根据商户id查询供应商客服QQ -->
	<select id="getServiceQQByMerchantsId" parameterType="customerServiceBean" resultType="customerServiceBean">
	   select a.* from tst_customer_service a
		left join tst_member b
		on a.member_id = b.member_id
		where b.merchants_id=#{merchants_id} and a.is_delete='0'
	</select>
	
	<!-- 删除供应商所设置QQ -->
	<update id="deleteServiceQQ" parameterType="customerServiceBean">
	    update tst_customer_service set is_delete='1'
	    where member_id=#{member_id}
	</update>
	
	<!-- 根据等级查询会员权益 -->
	<select id="getPrivilegeByLevel" parameterType="memberLevelBean" resultType="memberLevelBean">
	   select * from tst_member_level where level_id=#{level_id}
	</select>
	<!-- 获得会员的邮箱、手机、电话、地址 -->
	<select id="getMemberInformation" parameterType="memberBean" resultType="memberBean">
		select * from tst_member
		where member_id=#{member_id}
		and is_delete='0'
	</select>
	<!-- 获得所有的供应商 -->
	<select id="getAllSupplier" parameterType="memberBean" resultType="memberBean">
		SELECT member_id,company_name from tst_member 
		where is_delete='0' and 
		company_name is not null 
		and is_freeze = '0' 
		ORDER BY member_level DESC
	</select>
</mapper>